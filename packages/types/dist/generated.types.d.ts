/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */
import type { ColumnType } from "kysely";
export declare enum BetResultType {
    AWAY_WIN = "AWAY_WIN",
    DRAW = "DRAW",
    HOME_WIN = "HOME_WIN"
}
export declare enum FederationType {
    AFRICA = "AFRICA",
    ASIA = "ASIA",
    EUROPE = "EUROPE",
    NORTH_CENTRAL_AMERICA = "NORTH_CENTRAL_AMERICA",
    OCEANIA = "OCEANIA",
    SOUTH_AMERICA = "SOUTH_AMERICA",
    WORLD = "WORLD"
}
export declare enum LeagueType {
    CLUB_TOURNAMENT = "ClubTournament",
    FRIENDLY = "Friendly",
    LEAGUE = "League",
    LEAGUE_CUP = "LeagueCup",
    NATIONAL_TOURNAMENT = "NationalTournament",
    TOTALS = "Totals",
    UNASSIGNED = "Unassigned"
}
export declare enum LogType {
    ERROR = "ERROR",
    INFO = "INFO",
    WARNING = "WARNING"
}
export declare enum OrganizationType {
    AFC = "AFC",
    AUSTRIA = "AUSTRIA",
    BELGIUM = "BELGIUM",
    CAF = "CAF",
    CONCACAF = "CONCACAF",
    CONMEBOL = "CONMEBOL",
    CZECH = "CZECH",
    ENGLAND = "ENGLAND",
    FIFA = "FIFA",
    FRANCE = "FRANCE",
    GERMANY = "GERMANY",
    ITALY = "ITALY",
    NETHERLANDS = "NETHERLANDS",
    OFC = "OFC",
    PORTUGAL = "PORTUGAL",
    SPAIN = "SPAIN",
    TURKEY = "TURKEY",
    UEFA = "UEFA"
}
export type Generated<T> = T extends ColumnType<infer S, infer I, infer U> ? ColumnType<S, I | undefined, U> : ColumnType<T, T | undefined, T>;
export type Json = JsonValue;
export type JsonArray = JsonValue[];
export type JsonObject = {
    [x: string]: JsonValue | undefined;
};
export type JsonPrimitive = boolean | number | string | null;
export type JsonValue = JsonArray | JsonObject | JsonPrimitive;
export type Timestamp = ColumnType<Date, Date | string, Date | string>;
export interface Bet {
    betCompetitionId: string;
    betId: Generated<string>;
    createdAt: Generated<Timestamp | null>;
    fixtureGoalsBet: Json | null;
    fixtureId: number;
    fixtureResultBet: BetResultType | null;
    fixtureScorersBet: Json | null;
    isEvaluated: Generated<boolean>;
    leagueId: number;
    oddValue: Json | null;
    season: number;
    updatedAt: Timestamp | null;
    userId: string;
}
export interface BetCompetition {
    betCompetitionId: Generated<string>;
    competition1stTeamPoints: number | null;
    competition2ndTeamPoints: number | null;
    competition3rdTeamPoints: number | null;
    competition4thTeamPoints: number | null;
    competitionTopAssistPoints: number | null;
    competitionTopCleanSheetsPoints: number | null;
    competitionTopScorerPoints: number | null;
    createdAt: Generated<Timestamp | null>;
    dateEnd: string;
    dateStart: string;
    fixtureResultPoints: number | null;
    hasFinished: Generated<boolean>;
    isGlobal: Generated<boolean>;
    name: string;
    playerLimit: number;
    private: Generated<boolean>;
    resultGoalsAwayPoints: number | null;
    resultGoalsHomePoints: number | null;
    resultGoalsPoints: number | null;
    resultScorersPoints: number | null;
    season: number;
    updatedAt: Timestamp | null;
    userId: string;
}
export interface BetCompetitionToLeague {
    betCompetitionId: string;
    leagueId: number;
}
export interface BetEvaluated {
    betCompetitionId: string;
    betId: string;
    createdAt: Generated<Timestamp | null>;
    fixtureAwayGoalsPoints: number | null;
    fixtureGoalsPoints: number | null;
    fixtureHomeGoalsPoints: number | null;
    fixtureId: number;
    fixtureResultPoints: number | null;
    fixtureScorers: Json | null;
    fixtureScorersCorrect: number | null;
    fixtureScorersIncorrect: number | null;
    fixtureScorersPoints: number | null;
    id: Generated<string>;
    season: number;
    updatedAt: Timestamp | null;
    userId: string;
}
export interface Fixture {
    awayTeamGoalsExtra: number | null;
    awayTeamGoalsFinish: number | null;
    awayTeamGoalsHalf: number | null;
    awayTeamGoalsPenalty: number | null;
    awayTeamId: number;
    createdAt: Generated<Timestamp | null>;
    date: string;
    elapsed: number | null;
    fixtureId: number;
    fixtureRoundId: string | null;
    homeTeamGoalsExtra: number | null;
    homeTeamGoalsFinish: number | null;
    homeTeamGoalsHalf: number | null;
    homeTeamGoalsPenalty: number | null;
    homeTeamId: number;
    id: Generated<string | null>;
    leagueId: number;
    referee: string | null;
    round: number;
    season: number;
    status: string;
    teamIdWon: number | null;
    updatedAt: Timestamp | null;
    venue: string | null;
}
export interface FixtureRound {
    dateStarted: string;
    hasStarted: Generated<boolean>;
    id: Generated<string>;
    leagueId: number;
    round: number;
    season: number;
}
export interface League {
    countPlayerStats: boolean | null;
    country: string;
    createdAt: Generated<Timestamp | null>;
    dateEnd: string;
    dateStart: string;
    federation: FederationType;
    flag: string;
    gamesPlayed: Generated<number>;
    groupStage: boolean | null;
    isForUnassigned: Generated<boolean | null>;
    leagueId: number;
    logo: string;
    name: string;
    national: boolean;
    organization: OrganizationType | null;
    season: number;
    supported: Generated<boolean>;
    type: LeagueType;
    updatedAt: Timestamp | null;
}
export interface Log {
    action: string;
    additionalData: Json | null;
    createdAt: Generated<Timestamp | null>;
    id: Generated<string>;
    message: string;
    type: LogType;
    userId: string | null;
}
export interface Nation {
    altNationName: string | null;
    code: string;
    flag: string;
    id: number;
    nationName: string;
}
export interface Player {
    age: number | null;
    birthCountry: string | null;
    birthDate: string | null;
    createdAt: Generated<Timestamp | null>;
    firstName: string;
    height: string | null;
    lastName: string;
    name: string;
    photo: string | null;
    playerId: number;
    updatedAt: Timestamp | null;
    weight: string | null;
}
export interface PlayerToTeam {
    playerId: number;
    season: number;
    teamId: number;
}
export interface Season {
    isActual: Generated<boolean>;
    isSupported: boolean | null;
    seasonEndDate: string;
    seasonId: number;
    seasonStartDate: string;
    supportedLeagues: Json;
}
export interface Team {
    code: string | null;
    country: string;
    createdAt: Generated<Timestamp | null>;
    logo: string | null;
    name: string;
    national: boolean;
    teamId: number;
    updatedAt: Timestamp | null;
    venue: string | null;
}
export interface TeamToLeague {
    leagueId: number;
    season: number;
    teamId: number;
}
export interface User {
    avatar: string | null;
    createdAt: Generated<Timestamp | null>;
    id: Generated<string>;
    isVerified: boolean | null;
    name: string;
    providerAvatar: string | null;
    providerId: string;
    providerName: string;
    updatedAt: Timestamp | null;
}
export interface UserSettings {
    createdAt: Generated<Timestamp | null>;
    id: Generated<string>;
    leagueOrder: string | null;
    providerId: string;
    updatedAt: Timestamp | null;
    userId: string;
}
export interface UserToBetCompetition {
    betCompetitionId: string;
    userId: string;
}
export interface DB {
    Bet: Bet;
    BetCompetition: BetCompetition;
    BetCompetitionToLeague: BetCompetitionToLeague;
    BetEvaluated: BetEvaluated;
    Fixture: Fixture;
    FixtureRound: FixtureRound;
    League: League;
    Log: Log;
    Nation: Nation;
    Player: Player;
    PlayerToTeam: PlayerToTeam;
    Season: Season;
    Team: Team;
    TeamToLeague: TeamToLeague;
    User: User;
    UserSettings: UserSettings;
    UserToBetCompetition: UserToBetCompetition;
}
