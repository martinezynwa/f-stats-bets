/**
 * WARNING: This file is automatically generated by kysely-codegen.
 * DO NOT modify this file directly.
 */

import type { ColumnType } from "kysely";

export type FederationType = "AFRICA" | "ASIA" | "EUROPE" | "NORTH_CENTRAL_AMERICA" | "OCEANIA" | "SOUTH_AMERICA" | "WORLD";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Json = ColumnType<JsonValue, string, string>;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [K in string]?: JsonValue;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type LeagueType = "ClubTournament" | "Friendly" | "League" | "LeagueCup" | "NationalTournament" | "Totals" | "Unassigned";

export type OrganizationType = "AFC" | "AUSTRIA" | "BELGIUM" | "CAF" | "CONCACAF" | "CONMEBOL" | "CZECH" | "ENGLAND" | "FIFA" | "FRANCE" | "GERMANY" | "ITALY" | "NETHERLANDS" | "OFC" | "PORTUGAL" | "SPAIN" | "TURKEY" | "UEFA";

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Bet {
  betCompetitionId: string;
  betId: Generated<string>;
  createdAt: Generated<Timestamp | null>;
  fixtureGoalsBet: Json | null;
  fixtureId: number;
  fixtureResultBet: string | null;
  fixtureScorersBet: Json | null;
  isEvaluated: Generated<boolean>;
  leagueId: string;
  oddValue: Json | null;
  season: number;
  updatedAt: Timestamp | null;
  userId: string;
}

export interface Fixture {
  apiLeagueId: number;
  awayTeamApiId: number;
  awayTeamGoalsExtra: number | null;
  awayTeamGoalsFinish: number | null;
  awayTeamGoalsHalf: number | null;
  awayTeamGoalsPenalty: number | null;
  awayTeamId: string;
  createdAt: Generated<Timestamp | null>;
  date: string;
  elapsed: number | null;
  fixtureId: number;
  fixtureRoundId: string | null;
  homeTeamApiId: number;
  homeTeamGoalsExtra: number | null;
  homeTeamGoalsFinish: number | null;
  homeTeamGoalsHalf: number | null;
  homeTeamGoalsPenalty: number | null;
  homeTeamId: string;
  id: Generated<string | null>;
  leagueId: string;
  oddsId: string | null;
  referee: string | null;
  round: number;
  season: number;
  status: string;
  teamIdWon: string | null;
  updatedAt: Timestamp | null;
  venue: string | null;
}

export interface League {
  apiLeagueId: number;
  countPlayerStats: boolean | null;
  country: string;
  createdAt: Generated<Timestamp | null>;
  dateEnd: string;
  dateStart: string;
  federation: FederationType;
  flag: string;
  gamesPlayed: Generated<number>;
  groupStage: boolean | null;
  id: Generated<string>;
  isForUnassigned: Generated<boolean | null>;
  logo: string;
  name: string;
  national: boolean;
  organization: OrganizationType | null;
  season: number;
  supported: Generated<boolean>;
  type: LeagueType;
  updatedAt: Timestamp | null;
}

export interface Nation {
  altNationName: string | null;
  code: string;
  flag: string;
  id: number;
  nationName: string;
}

export interface Season {
  isActual: Generated<boolean>;
  isSupported: boolean | null;
  seasonEndDate: string;
  seasonId: number;
  seasonStartDate: string;
  supportedLeagues: Json;
}

export interface User {
  avatar: string | null;
  createdAt: Generated<Timestamp | null>;
  id: string;
  isVerified: boolean | null;
  name: string;
  providerAvatar: string | null;
  providerId: string;
  providerName: string;
  updatedAt: Timestamp | null;
  userSettingsId: string | null;
}

export interface UserSettings {
  createdAt: Generated<Timestamp | null>;
  id: Generated<string>;
  leagueOrder: string | null;
  updatedAt: Timestamp | null;
  userId: string | null;
}

export interface DB {
  Bet: Bet;
  Fixture: Fixture;
  League: League;
  Nation: Nation;
  Season: Season;
  User: User;
  UserSettings: UserSettings;
}
